const FreshserviceIntegration = require('./src/integrations/freshservice.js');

async function testNotificationLogic() {
  console.log('üß™ Testando l√≥gica de extra√ß√£o de telefone...');

  try {
    const freshservice = new FreshserviceIntegration({});

    // Simular dados de um ticket resolvido
    const mockTicket = {
      id: 155530,
      subject: '[WhatsApp] Atendimento - Teste',
      status: 5,
      updated_at: new Date().toISOString()
    };

    const mockFullTicket = {
      phone: null,
      requester_phone: null,
      email: null,
      custom_fields: {},
      requester_name: 'Teste Usu√°rio',
      description_text: `Solicita√ß√£o de atendimento via WhatsApp

Contato: Teste Usu√°rio
Telefone: 551199999999

Mensagem:
Teste de notifica√ß√£o

---
Ticket criado automaticamente pelo bot WhatsApp
Telefone de contato: 551199999999`
    };

    // Mock do m√©todo getTicket para retornar dados simulados
    freshservice.getTicket = async (ticketId) => {
      return {
        success: true,
        ticket: mockFullTicket
      };
    };

    // Testar extra√ß√£o de informa√ß√µes
    const ticketInfo = await freshservice.getTicketInfo(mockTicket);

    console.log('üìã Resultado da extra√ß√£o:');
    console.log('   Phone:', ticketInfo.phone || 'Nenhum');
    console.log('   User Identifier:', ticketInfo.userIdentifier || 'Nenhum');
    console.log('   Has Phone:', !!ticketInfo.phone);

    if (ticketInfo.phone) {
      console.log('‚úÖ Telefone encontrado! Notifica√ß√£o seria enviada para:', ticketInfo.phone);
    } else {
      console.log('‚ùå Telefone n√£o encontrado');
    }

  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
  }
}

testNotificationLogic().catch(console.error);
